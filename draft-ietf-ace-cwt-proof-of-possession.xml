<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type='text/xsl' href='http://xml2rfc.tools.ietf.org/authoring/rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="std" docName="draft-ietf-ace-cwt-proof-of-possession-10"
     ipr="trust200902">
  <front>
    <title abbrev="Proof-of-Possession Key for CWTs">Proof-of-Possession Key Semantics for CBOR Web Tokens (CWTs)</title>

    <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
      <organization>Microsoft</organization>
      <address>
	<email>mbj@microsoft.com</email>
	<uri>http://self-issued.info/</uri>
      </address>
    </author>

    <author initials="L." surname="Seitz" fullname="Ludwig Seitz">
      <organization>RISE SICS</organization>
      <address>
	<postal>
	  <street>Scheelevaegen 17</street>
	  <city>Lund</city>
	  <code>223 70</code>
	  <country>Sweden</country>
	</postal>
	<email>ludwig@ri.se</email>
      </address>
    </author>

    <author initials="G." surname="Selander" fullname="Göran Selander">
      <organization>Ericsson AB</organization>
      <address>
	<postal>
	  <street>Färögatan 6</street>
	  <city>Kista</city>
	  <code>164 80</code>
	  <country>Sweden</country>
	</postal>
	<email>goran.selander@ericsson.com</email>
      </address>
    </author>

    <author fullname="Samuel Erdtman" initials="S." surname="Erdtman">
      <organization>Spotify</organization>
      <address>
      	<email>erdtman@spotify.com</email>
      </address>
    </author>

    <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
      <organization>Arm Ltd.</organization>
      <address>
	<postal>
	  <street></street>
	  <code>6060</code> <city>Hall in Tirol</city>
	  <country>Austria</country>
	</postal>
	<email>Hannes.Tschofenig@arm.com</email>
      </address>
    </author>

    <date day="30" month="October" year="2019"/>

    <area>Security</area>
    <workgroup>ACE</workgroup>

    <keyword>CBOR Web Token</keyword>
    <keyword>CWT</keyword>
    <keyword>Proof-of-Possession</keyword>
    <keyword>Holder-of-Key</keyword>

    <abstract>
      <t>
        This specification describes how to declare in a CBOR Web Token (CWT)
	(which is defined by RFC 8392)
	that the presenter of the CWT possesses a particular proof-of-possession key.
	Being able to prove possession of a key is also sometimes described as
	being the holder-of-key.
	This specification provides equivalent functionality to
	"Proof-of-Possession Key Semantics for JSON Web Tokens (JWTs)" (RFC 7800)
	but using Concise Binary Object Representation (CBOR) and CWTs
	rather than JavaScript Object Notation (JSON) and JSON Web Tokens (JWTs).
      </t>
    </abstract>

  </front>

  <middle>
    <section title="Introduction" anchor="Introduction">
      <t>
        This specification describes how a CBOR Web Token (CWT) <xref target="RFC8392"/> can declare
	that the presenter of the CWT possesses a particular proof-of-possession (PoP) key.
	Proof of possession of a key is also sometimes described as
	being the holder-of-key.
	This specification provides equivalent functionality to
	"Proof-of-Possession Key Semantics for JSON Web Tokens (JWTs)" <xref target="RFC7800"/>
	but using Concise Binary Object Representation (CBOR) <xref target="RFC7049"/>
	and CWTs <xref target="RFC8392"/>
	rather than JavaScript Object Notation (JSON) <xref target="RFC8259"/>
	and JSON Web Tokens (JWTs) <xref target="JWT"/>.
     </t>
    </section>

    <section title='Terminology' anchor='Terminology'>

      <t>
         The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
         "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
         "MAY", and "OPTIONAL" in this document are to be interpreted as
         described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
         when, and only when, they appear in all capitals, as shown here.
       </t>

      <t>
	This specification uses terms defined in
	the CBOR Web Token (CWT) <xref target="RFC8392"/>,
	CBOR Object Signing and Encryption (COSE) <xref target="RFC8152"/>, and
	Concise Binary Object Representation (CBOR) <xref target="RFC7049"/>
	specifications.
      </t>

      <t>
	These terms are defined by this specification:
      </t>

      <t>
	<list style="hanging">

	  <t hangText="Issuer">
	    <vspace/>
	    Party that creates the CWT and binds the claims about the subject to the
	    proof-of-possession key.
	  </t>

	  <t hangText="Presenter">
	    <vspace/>
	    Party that proves possession of a private key (for asymmetric key cryptography)
	    or secret key (for symmetric key cryptography) to a recipient of a CWT.
	    <vspace/>
	    In the context of OAuth, this party is also called the OAuth Client.
	  </t>

	  <t hangText="Recipient">
	    <vspace/>
	    Party that receives the CWT containing the proof-of-possession key information from the presenter.
	    <vspace/>
	    In the context of OAuth, this party is also called the OAuth Resource Server.
	  </t>

	</list>
      </t>
      <t>
	This specification provides examples in CBOR extended diagnostic
	notation, as defined in Appendix G of <xref target="RFC8610"/>.
	The examples include line breaks for readability.
      </t>
    </section>

    <section title='Representations for Proof-of-Possession Keys' anchor="PoP">
      <t>
	By including a <spanx style="verb">cnf</spanx> (confirmation) claim in a CWT,
	the issuer of the CWT declares that the presenter possesses a particular key
	and that the recipient can cryptographically confirm that
	the presenter has possession of that key.
	The value of the <spanx style="verb">cnf</spanx> claim is a CBOR map
	(which is defined in Section 2.1 of <xref target="RFC7049"/>)
	and the members of that map identify the proof-of-possession key.
      </t>
      <t>
	The presenter can be identified in one of several ways by the CWT,
	depending upon the application requirements.
	For instance, some applications may use
	the CWT <spanx style="verb">sub</spanx> (subject) claim <xref target="RFC8392"/>,
	to identify the presenter.
	Other applications may use
	the <spanx style="verb">iss</spanx> (issuer) claim <xref target="RFC8392"/>
	to identify the presenter.
	In some applications, the subject identifier might be relative to
	the issuer identified by the <spanx style="verb">iss</spanx> claim.
	The actual mechanism used is dependent upon the application.
	The case in which the presenter is the subject of the CWT is analogous to
	Security Assertion Markup Language (SAML) 2.0 <xref target="OASIS.saml-core-2.0-os"/> SubjectConfirmation usage.
      </t>

      <section title="Confirmation Claim" anchor="Confirmation">
	  <t>
  The <spanx style="verb">cnf</spanx> claim in the CWT is used to carry confirmation methods. Some of
 them use proof-of-possession keys while others do not. This design is
 analogous to the SAML 2.0 <xref target="OASIS.saml-core-2.0-os"/> SubjectConfirmation
 element in which a number of different subject confirmation methods can
 be included (including proof-of-possession key information).
</t>
	<t>
	  The set of confirmation members that a
	  CWT must contain to be considered valid is context dependent
	  and is outside the scope of this specification.
	  Specific applications of CWTs will require implementations
	  to understand and process some confirmation members in particular ways.
	  However, in the absence of such requirements, all confirmation members
	  that are not understood by implementations MUST be ignored.
	</t>
	<t>
	  This specification establishes the
	  IANA "CWT Confirmation Methods" registry for these members
	  in <xref target="CnfReg"/> and registers the members defined by this specification.
	  Other specifications can register
	  other members used for confirmation, including other members for
	  conveying proof-of-possession keys using different key
	  representations.
	</t>
	<t>
		The <spanx style="verb">cnf</spanx> claim value MUST represent only a single
		proof-of-possession key. At most one of the <spanx style="verb">COSE_Key</spanx>
		and <spanx style="verb">Encrypted_COSE_Key</spanx> confirmation values defined
		in <xref target="fig:cborMappings"/> may be present. Note that if an application
		needs to represent multiple proof-of-possession keys in the same CWT, one way
		for it to achieve this is to use other claim names, in addition to
		<spanx style="verb">cnf</spanx>, to hold the additional proof-of-possession
		key information. These claims could use the same syntax and semantics as the
		<spanx style="verb">cnf</spanx> claim. Those claims would be defined by
		applications or other specifications and could be registered in the
		IANA "CBOR Web Token Claims" registry <xref target="IANA.CWT.Claims"/>.
	</t>
	<t>
	  <figure align="center" anchor="fig:cborMappings"
	    title="Summary of the cnf names, keys, and value types">
	<artwork><![CDATA[
/--------------------+-----+-------------------------------\
| Name               | Key | Value type                    |
|--------------------+-----+-------------------------------|
| COSE_Key           | 1   | COSE_Key                      |
| Encrypted_COSE_Key | 2   | COSE_Encrypt or COSE_Encrypt0 |
| kid                | 3   | binary string                 |
\--------------------+-----+-------------------------------/
]]></artwork>
	  </figure>
	</t>
      </section>

      <section title="Representation of an Asymmetric Proof-of-Possession Key" anchor="PrivatePoP">

	<t>
	  When the key held by the presenter is an asymmetric private key,
	  the <spanx style="verb">COSE_Key</spanx> member
	  is a COSE_Key <xref target="RFC8152"/>
	  representing the corresponding asymmetric public key.
	  The following example demonstrates such a declaration
	  in the CWT Claims Set of a CWT:
	</t>
	<figure>
	  <artwork><![CDATA[
   {
   /iss/ 1 : "coaps://server.example.com",
   /aud/ 3 : "coaps://client.example.org",
   /exp/ 4 : 1879067471,
   /cnf/ 8 :{
     /COSE_Key/ 1 :{
       /kty/ 1 : /EC2/ 2,
       /crv/ -1 : /P-256/ 1,
       /x/ -2 : h'd7cc072de2205bdc1537a543d53c60a6acb62eccd890c7fa27c9
                  e354089bbe13',
       /y/ -3 : h'f95e1d4b851a2cc80fff87d8e23f22afb725d535e515d020731e
                  79a3b4e47120'
      }
    }
  }
]]></artwork>
	</figure>

	<t>
	  The COSE_Key MUST contain the required key members for a COSE_Key of that key type
	  and MAY contain other COSE_Key members,
	  including the <spanx style="verb">kid</spanx> (Key ID) member.
	</t>

	<t>
	  The <spanx style="verb">COSE_Key</spanx> member MAY also be used for a COSE_Key
	  representing a symmetric key, provided that the CWT is encrypted
	  so that the key is not revealed to unintended parties.
	  The means of encrypting a CWT is explained in <xref target="RFC8392"/>.
	  If the CWT is not encrypted, the symmetric key MUST be encrypted as described in <xref target="SymmetricPoP"/>.  This procedure is equivalent to
	  the one defined in section 3.3 of <xref target="RFC7800"/>.
	</t>
      </section>

      <section title="Representation of an Encrypted Symmetric Proof-of-Possession Key" anchor="SymmetricPoP">

	<t>
	  When the key held by the presenter is a symmetric key,
	  the <spanx style="verb">Encrypted_COSE_Key</spanx> member
	  is an encrypted COSE_Key <xref target="RFC8152"/>
	  representing the symmetric key
	  encrypted to a key known to the recipient
	  using COSE_Encrypt or COSE_Encrypt0.
	</t>
	<t>
	  The following example
	  illustrates a symmetric key that could subsequently be encrypted for use in the
	  <spanx style="verb">Encrypted_COSE_Key</spanx> member:
	</t>
	<figure>
	  <artwork><![CDATA[
  {
   /kty/ 1 : /Symmetric/ 4,
   /alg/ 3 : /HMAC 256-256/ 5,
   /k/ -1 : h'6684523ab17337f173500e5728c628547cb37df
              e68449c65f885d1b73b49eae1'
  }
]]></artwork>
	</figure>
	<t>
	  The COSE_Key representation
	  is used as the plaintext when encrypting the key.
	</t>
	<t>
	  The following example CWT Claims Set of a CWT
	  illustrates the use of an encrypted symmetric key as the
	  <spanx style="verb">Encrypted_COSE_Key</spanx> member value:
	</t>
	<figure>
	  <artwork><![CDATA[
  {
   /iss/ 1 : "coaps://server.example.com",
   /sub/ 2 : "24400320",
   /aud/ 3: "s6BhdRkqt3",
   /exp/ 4 : 1311281970,
   /iat/ 5 : 1311280970,
   /cnf/ 8 : {
   /Encrypted_COSE_Key/ 2 : [
       /protected header/ h'A1010A' /{ \alg\ 1:10 \AES-CCM-16-64-128\}/,
       /unprotected header/ { / iv / 5: h'636898994FF0EC7BFCF6D3F95B'},
       /ciphertext/  h'0573318A3573EB983E55A7C2F06CADD0796C9E584F1D0E3E
                       A8C5B052592A8B2694BE9654F0431F38D5BBC8049FA7F13F'
     ]
    }
  }

]]></artwork>
	</figure>

	<t>
	The example above was generated with the key:
	</t>
        <figure>
	  <artwork><![CDATA[
          h'6162630405060708090a0b0c0d0e0f10'
]]></artwork>
	</figure>
      </section>

      <section title="Representation of a Key ID for a Proof-of-Possession Key" anchor="KidPoP">

	<t>
	  The proof-of-possession key can also be identified using
	  a Key ID instead of communicating the actual key,
	  provided the recipient is able to obtain the identified key
	  using the Key ID.
	  In this case,
	  the issuer of a CWT declares that the presenter possesses a particular key
	  and that the recipient can cryptographically confirm
	  proof of possession of the key by the presenter by including a
	  <spanx style="verb">cnf</spanx> claim in the CWT
	  whose value is a CBOR map with the CBOR map containing a
	  <spanx style="verb">kid</spanx> member
	  identifying the key.
	</t>
	<t>
	  The following example demonstrates such a declaration
	  in the CWT Claims Set of a CWT:
	</t>
	<figure>
	  <artwork><![CDATA[
  {
   /iss/ 1 : "coaps://as.example.com",
   /aud/ 3 : "coaps://resource.example.org",
   /exp/ 4 : 1361398824,
   /cnf/ 8 : {
     /kid/ 3 : h'dfd1aa976d8d4575a0fe34b96de2bfad'
    }
  }
]]></artwork>
	</figure>
	<t>
	  The content of the <spanx style="verb">kid</spanx> value is application specific.
	  For instance, some applications may choose to use a cryptographic hash of the public key
	  value as the <spanx style="verb">kid</spanx> value.
	</t>
	<t>
	  Note that the use of a Key ID to identify a proof-of-possession key needs to be carefully circumscribed,
	  as described below and in <xref target="Operational"/>.
	  In cases where the Key ID is not a cryptographic value derived from the key
	  or where not all of the parties involved are validating the cryptographic derivation,
	  implementers should expect collisions, where different keys are assigned the same Key ID.
	  Recipients of a CWT with a PoP key linked through only a Key ID should be prepared to handle
	  such situations.
	</t>
	<t>
	  In the world of constrained Internet of Things (IoT) devices,
	  there is frequently a restriction on the size of Key IDs,
	  either because of table constraints or a desire to keep message sizes small.
	</t>
	<t>Note that the value of a Key ID for a specific key is not
	necessarily the same for different parties. When sending a COSE
	encrypted message with a shared key, the Key ID may be different on
	both sides of the conversation,	with the appropriate one being included
	in the message based on the recipient of the message.
	</t>
      </section>

<!--
      <section title="Representation of a URL for a Proof-of-Possession Key" anchor="jkuPoP">

	<t>
	  The proof-of-possession key can be passed by reference
	  instead of being passed by value.
	  This is done using the <spanx style="verb">jku</spanx> member.
	  Its value is a URI <xref target="RFC3986"/> that refers to a
	  resource for a set of JSON-encoded public keys represented as a JWK Set <xref target="JWK" />,
	  one of which is the proof-of-possession key.
	  If there are multiple keys in the referenced JWK Set document,
	  a <spanx style="verb">kid</spanx> member MUST also be included
	  with the referenced key's JWK also containing the same <spanx style="verb">kid</spanx> value.
	</t>
	<t>
	  The protocol used to acquire the resource MUST provide
	  integrity protection.  An HTTP GET request to retrieve the
	  JWK Set MUST use TLS
	  <xref target="RFC5246"/> and
	  the identity of the server MUST be validated, as per
	  Section 6 of <xref target="RFC6125">RFC 6125</xref>.
	</t>
	<t>
	  The following example demonstrates such a declaration
	  in the CWT Claims Set of a CWT:
	</t>
	<figure>
	  <artwork><![CDATA[
  {
   "iss": "https://server.example.com",
   "sub": "17760704",
   "aud": "https://client.example.org",
   "exp": 1440804813,
   "cnf":{
     "jku": "https://keys.example.net/pop-keys.json",
     "kid": "2015-08-28"
    }
  }
]]></artwork>
	</figure>
      </section>
-->

      <section title="Specifics Intentionally Not Specified" anchor="NotSpecified">
	<t>
	  Proof of possession is often demonstrated by having the presenter sign
	  a value determined by the recipient using the key possessed by the presenter.
	  This value is sometimes called a "nonce" or a "challenge".
          There are, however, also other means to demonstrate freshness of the exchange
	  and to link the proof-of-possession key to the participating parties,
	  as demonstrated by various authentication and key exchange protocols.
	</t>
	<t>
	  The means of communicating the nonce and the nature of its contents
	  are intentionally not described in this specification,
	  as different protocols will communicate this information in different ways.
	  Likewise, the means of communicating the signed nonce is also not specified,
	  as this is also protocol specific.
	</t>
	<t>
	  Note that other means of proving possession of the key
	  exist, which could be used in conjunction with a CWT's confirmation key.
	  Applications making use of such alternate means are encouraged
	  to register them in the IANA "CWT Confirmation Methods" registry
	  established in <xref target="CnfReg"/>.
	</t>
      </section>

    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
        All the security considerations that
        are discussed in <xref target="RFC8392"/> also apply here.
        In addition, proof of possession introduces its own unique security issues.
	Possessing a key is only valuable if it is kept secret.
	Appropriate means must be used to ensure that unintended parties
	do not learn private key or symmetric key values.
      </t>
      <t>
	Applications utilizing proof of possession SHOULD also utilize audience restriction,
	as described in Section 3.1.3 of <xref target="RFC8392"/>,
	as it provides additional protections.
	Audience restriction can be used by recipients to reject messages intended for different recipients.
	(Of course, applications not using proof of possession can also benefit
	from using audience restriction to reject messages intended for different recipients.)
      </t>
      <t>
	CBOR Web Tokens with proof-of-possession keys are used in context of an architecture,
	such as the ACE OAuth Framework <xref target="I-D.ietf-ace-oauth-authz"/>,
	in which protocols are used by a presenter to request these tokens
	and to subsequently use them with recipients.
	Proof of possession only provides the intended security gains when the
	proof is known to be current and not subject to replay attacks;
	security protocols using mechanisms such as nonces and timestamps can be used to
	avoid the risk of replay when performing proof of possession for a token.
	Note that a discussion of the architecture or specific protocols that
	CWT proof-of-possession tokens are used with is beyond the scope of this specification.
      </t>
      <t>
	As is the case with other information included in a CWT,
	it is necessary to apply data origin authentication and integrity protection
	(via a keyed message digest or a digital signature).
	Data origin authentication ensures that the recipient of the CWT
	learns about the entity that created the CWT
	since this will be important for any policy decisions.
	Integrity protection prevents an adversary from changing
	any elements conveyed within the CWT payload.
	Special care has to be applied when carrying symmetric keys inside the CWT
	since those not only require integrity protection
	but also confidentiality protection.
      </t>
      <t>
	As described in Section 6 (Key Identification) and Appendix D (Notes on Key Selection)
	of <xref target="JWS"/>, it is important to make explicit trust decisions about the keys.
	Proof-of-possession signatures made with keys
	not meeting the application's trust criteria MUST NOT be relied upon.
      </t>
    </section>

    <section anchor="Privacy" title="Privacy Considerations">
      <t>
	A proof-of-possession key can be used as a correlation handle if the same key
	is used on multiple occasions.
	Thus, for privacy reasons, it is recommended that different proof-of-possession keys
	be used when interacting with different parties.
      </t>
    </section>

    <section anchor="Operational" title="Operational Considerations">
      <t>
	The use of CWTs with proof-of-possession keys requires additional information
	to be shared between the involved parties in order to ensure correct processing.
	The recipient needs to be able to use credentials to verify the authenticity and
	integrity of the CWT.  Furthermore, the recipient may need to be able to decrypt
	either the whole CWT or the encrypted parts thereof (see <xref target="SymmetricPoP"/>).
	This requires the recipient to know information about the issuer.
	Likewise, there needs to be agreement between the issuer and the recipient
	about the claims being used (which is also true of CWTs in general).
      </t>
      <t>
	When an issuer creates a CWT containing a Key ID claim, it needs to make sure that
	it does not issue another CWT with different claims containing the same Key ID
	within the lifetime of the CWTs, unless intentionally desired.
	Failure to do so may allow one party to impersonate another party,
	with the potential to gain additional privileges.
	A case where such reuse of a Key ID would be intentional is when a presenter obtains
	a CWT with different claims (e.g., extended scope) for the same recipient, but wants to
	continue using an existing security association (e.g., a DTLS session) bound to the key
	identified by the Key ID.
	Likewise, if PoP keys are used for multiple different kinds of CWTs in an application
	and the PoP keys are identified by Key IDs, care must be taken to keep the keys
	for the different kinds of CWTs segregated so that an attacker cannot
	cause the wrong PoP key to be used by using a valid Key ID
	for the wrong kind of CWT.
	Using an audience restriction for the CWT would be one strategy to mitigate this risk.
      </t>
    </section>

    <section anchor="IANA" title="IANA Considerations">

      <t>
	The following registration procedure is used for all the
	registries established by this specification.
      </t>
      <t>
	Values are registered on a Specification Required
	<xref target="RFC8126"/> basis after a three-week review period on the cwt-reg-review@ietf.org mailing
	list, on the advice of one or more Designated Experts. However, to allow for the
	allocation of values prior to publication, the Designated Experts may approve
	registration once they are satisfied that such a specification will be published.
	[[ Note to the RFC Editor:
	The name of the mailing list should be determined in consultation
	with the IESG and IANA. Suggested name: cwt-reg-review@ietf.org. ]]
       </t>
      <t>
	Registration requests sent to the mailing list for review should use
	an appropriate subject
	(e.g., "Request to Register CWT Confirmation Method: example").
	Registration requests that are undetermined for
	a period longer than 21 days can be brought to the IESG's attention
	(using the iesg@ietf.org mailing list) for resolution.
      </t>
      <t>
	Designated Experts should determine whether a registration request contains
	enough information for the registry to be populated with the new values and
	whether the proposed new functionality already exists.
	In the case of an incomplete registration
	or an attempt to register already existing functionality,
	the Designated Experts should ask for corrections or reject the registration.
      </t>
      <t>
	It is suggested that multiple Designated Experts be appointed who are able to
	represent the perspectives of different applications using this specification
	in order to enable broadly informed review of registration decisions.
	In cases where a registration decision could be perceived as
	creating a conflict of interest for a particular Expert,
	that Expert should defer to the judgment of the other Experts.
      </t>

      <section anchor="ClaimsRegistry" title="CBOR Web Token Claims Registration">
	<t>
	  This specification registers the <spanx style="verb">cnf</spanx> claim in the IANA
	  "CBOR Web Token Claims" registry <xref target="IANA.CWT.Claims"/>
	  established by <xref target="RFC8392"/>.
	</t>

	<section anchor='ClaimsContents' title='Registry Contents'>
	  <t>
	    <?rfc subcompact="yes"?>
	    <list style='symbols'>
	      <t>
		Claim Name: <spanx style="verb">cnf</spanx>
	      </t>
	      <t>
		Claim Description: Confirmation
	      </t>
	      <t>
		JWT Claim Name: <spanx style="verb">cnf</spanx>
	      </t>
	      <t>
		Claim Key: TBD (maybe 8)
	      </t>
	      <t>
		Claim Value Type(s): map
	      </t>
	      <t>
		Change Controller: IESG
	      </t>
	      <t>
		Specification Document(s): <xref target="Confirmation"/> of [[ this document ]]
	      </t>
	    </list>
	  </t>
	</section>
	<?rfc subcompact="no"?>
      </section>

      <section title="CWT Confirmation Methods Registry" anchor="CnfReg">
	<t>
	  This specification establishes the
	  IANA "CWT Confirmation Methods" registry
	  for CWT <spanx style="verb">cnf</spanx> member values.
	  The registry records the confirmation method member
	  and a reference to the specification that defines it.
	</t>

        <section title="Registration Template" anchor="CnfTemplate">
          <t>
            <list style='hanging'>
              <t hangText='Confirmation Method Name:'>
                <vspace/>
                The human-readable name requested (e.g., "kid").
              </t>
              <t hangText='Confirmation Method Description:'>
                <vspace/>
                Brief description of the confirmation method (e.g., "Key Identifier").
              </t>
	      <t hangText='JWT Confirmation Method Name:'>
		<vspace/>
		Claim Name of the equivalent JWT confirmation method value,
		as registered in <xref target="IANA.JWT.Claims"/>.
		CWT claims should normally have a corresponding JWT claim.
		If a corresponding JWT claim would not make sense,
		the Designated Experts can choose to accept registrations
		for which the JWT Claim Name is listed as "N/A".
	      </t>
	      <t hangText='Confirmation Key:'>
		<vspace/>
		CBOR map key value for the confirmation method.
	      </t>
	      <t hangText='Confirmation Value Type(s):'>
		<vspace/>
		CBOR types that can be used for the confirmation method value.
	      </t>
              <t hangText='Change Controller:'>
                <vspace/>
                For Standards Track RFCs, list the "IESG". For others, give the name of the
                responsible party.
              </t>
              <t hangText='Specification Document(s):'>
                <vspace/>
                Reference to the document or documents that specify the parameter,
		preferably including URIs that
		can be used to retrieve copies of the documents.
		An indication of the relevant
		sections may also be included but is not required.
		Note that the Designated Experts and IANA must be able to obtain
		copies of the specification document(s) to perform their work.
              </t>
            </list>
          </t>
        </section>

        <section title="Initial Registry Contents" anchor="CnfContents">
          <t> <?rfc subcompact="yes"?>
            <list style='symbols'>
              <t>
                Confirmation Method Name: <spanx style="verb">COSE_Key</spanx>
              </t>
              <t>
                Confirmation Method Description: COSE_Key Representing Public Key
              </t>
	      <t>
		JWT Confirmation Method Name: <spanx style="verb">jwk</spanx>
	      </t>
	      <t>
		Confirmation Key: 1
	      </t>
	      <t>
		Confirmation Value Type(s): COSE_Key structure
	      </t>
              <t>
                Change Controller: IESG
              </t>
              <t>
                Specification Document(s): <xref target="PrivatePoP"/> of [[ this document ]]
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Confirmation Method Name: <spanx style="verb">Encrypted_COSE_Key</spanx>
              </t>
              <t>
                Confirmation Method Description: Encrypted COSE_Key
              </t>
	      <t>
		JWT Confirmation Method Name: <spanx style="verb">jwe</spanx>
	      </t>
	      <t>
		Confirmation Key: 2
	      </t>
	      <t>
		Confirmation Value Type(s): COSE_Encrypt or COSE_Encrypt0 structure (with an optional corresponding COSE_Encrypt or COSE_Encrypt0 tag)
	      </t>
              <t>
                Change Controller: IESG
              </t>
              <t>
                Specification Document(s): <xref target="SymmetricPoP"/> of [[ this document ]]
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Confirmation Method Name: <spanx style="verb">kid</spanx>
              </t>
              <t>
                Confirmation Method Description: Key Identifier
              </t>
	      <t>
		JWT Confirmation Method Name: <spanx style="verb">kid</spanx>
	      </t>
	      <t>
		Confirmation Key: 3
	      </t>
	      <t>
		Confirmation Value Type(s): binary string
	      </t>
              <t>
                Change Controller: IESG
              </t>
              <t>
                Specification Document(s): <xref target="KidPoP"/> of [[ this document ]]
              </t>
            </list>
          </t>
<!--
          <t>
            <list style='symbols'>
              <t>
                Confirmation Method Name: <spanx style="verb">jku</spanx>
              </t>
              <t>
                Confirmation Method Description: JWK Set URL
              </t>
	      <t>
		JWT Confirmation Method Name: <spanx style="verb">jku</spanx>
	      </t>
	      <t>
		Confirmation Key: TBD
	      </t>
	      <t>
		Confirmation Value Type(s): text string
	      </t>
              <t>
                Change Controller: IESG
              </t>
              <t>
                Specification Document(s): <xref target="jkuPoP"/> of [[ this document ]]
              </t>
            </list>
          </t>
-->
	</section>
	<?rfc subcompact="no"?>
      </section>

    </section>

  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8152.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8392.xml' ?>

      <reference anchor="IANA.CWT.Claims" target="http://www.iana.org/assignments/cwt">
        <front>
          <title>CBOR Web Token Claims</title>
          <author>
            <organization>IANA</organization>
          </author>
	  <date/>
        </front>
      </reference>

    </references>

    <references title="Informative References">
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7800.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8610.xml' ?>
      <reference anchor="JWS" target="http://www.rfc-editor.org/info/rfc7515">
        <front>
          <title>JSON Web Signature (JWS)</title>
	  <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
	    <organization>Microsoft</organization>
	    <address>
	      <email>mbj@microsoft.com</email>
	      <uri>http://self-issued.info/</uri>
	    </address>
	  </author>
	  <author fullname="John Bradley" initials="J." surname="Bradley">
	    <organization abbrev="Ping Identity">Ping Identity</organization>
	    <address>
	      <email>ve7jtb@ve7jtb.com</email>
	    </address>
	  </author>
	  <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
	    <organization abbrev="NRI">Nomura Research Institute</organization>
	    <address>
	      <email>n-sakimura@nri.co.jp</email>
	    </address>
	  </author>
	  <date month="May" year="2015"/>
        </front>
        <seriesInfo name="RFC" value="7515" />
	<seriesInfo name="DOI" value="10.17487/RFC7515"/>
      </reference>
      
      <reference anchor="JWT" target='http://www.rfc-editor.org/info/rfc7519'>
        <front>
          <title>JSON Web Token (JWT)</title>
	  <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
	    <organization>Microsoft</organization>
	    <address>
	      <email>mbj@microsoft.com</email>
	      <uri>http://self-issued.info/</uri>
	    </address>
	  </author>
	  <author fullname="John Bradley" initials="J." surname="Bradley">
	    <organization abbrev="Ping Identity">Ping Identity</organization>
	    <address>
	      <email>ve7jtb@ve7jtb.com</email>
	    </address>
	  </author>
	  <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
	    <organization abbrev="NRI">Nomura Research Institute</organization>
	    <address>
	      <email>n-sakimura@nri.co.jp</email>
	    </address>
	  </author>
	  <date month="May" year="2015"/>
        </front>
        <seriesInfo name="RFC" value="7519"/>
	<seriesInfo name="DOI" value="10.17487/RFC7519"/>
      </reference>

      <!-- <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml2/reference.OASIS.saml-core-2.0-os.xml' ?> -->

      <reference anchor="OASIS.saml-core-2.0-os" target="http://docs.oasis-open.org/security/saml/v2.0/">
	<front>
	  <title>Assertions and Protocol for the OASIS Security Assertion Markup Language
	  (SAML) V2.0</title>
	  <author fullname="Scott Cantor" initials="S." surname="Cantor">
            <organization>Internet2</organization>
            <address>
	      <email>cantor.2@osu.edu</email>
            </address>
	  </author>
	  <author fullname="John Kemp" initials="J." surname="Kemp">
            <organization>Nokia</organization>
            <address>
	      <email>John.Kemp@nokia.com</email>
            </address>
	  </author>
	  <author fullname="Rob Philpott" initials="R." surname="Philpott">
            <organization>RSA Security</organization>
            <address>
	      <email>rphilpott@rsasecurity.com</email>
            </address>
	  </author>
	  <author fullname="Eve Maler" initials="E." surname="Maler">
            <organization>Sun Microsystems</organization>
            <address>
	      <email>eve.maler@sun.com</email>
            </address>
	  </author>
	  <date year="2005" month="March"/>
	</front>
	<seriesInfo name="OASIS Standard" value="saml-core-2.0-os"/>
	<format type="PDF" target="http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf"/>
      </reference>

      <reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
        <front>
          <title>JSON Web Token Claims</title>
          <author>
            <organization>IANA</organization>
          </author>
	  <date/>
        </front>
      </reference>

      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-ace-oauth-authz-21"?>

    </references>

    <section title='Acknowledgements' anchor='Acknowledgements' numbered="no">
      <t>
	Thanks to the following people for their reviews of the specification:
        Roman Danyliw,
	Christer Holmberg,
	Benjamin Kaduk,
	Mirja Kühlewind,
	Yoav Nir,
	Michael Richardson,
	Adam Roach,
	Éric Vyncke,
        and
	Jim Schaad.
      </t>
      <t>Ludwig Seitz and Göran Selander worked on this document as part of
    the CelticPlus projects CyberWI and CRITISEC, with funding from Vinnova.</t>
    </section>

    <section title="Document History" anchor="History">
      <t>
	[[ to be removed by the RFC Editor before publication as an RFC ]]
      </t>

      <t>-10
        <list style='symbols'>
	  <t>
	    Addressed IESG review comments by Adam Roach and Éric Vyncke.
	  </t>
        </list>
      </t>

      <t>-09
        <list style='symbols'>
	  <t>
	    Addressed Gen-ART review comments by Christer Holmberg and
	    SecDir review comments by Yoav Nir.
	  </t>
        </list>
      </t>

      <t>-08
        <list style='symbols'>
	  <t>
	    Addressed remaining Area Director review comments by Benjamin Kaduk.
	  </t>
        </list>
      </t>

      <t>-07
        <list style='symbols'>
	  <t>
	    Addressed Area Director review by Benjamin Kaduk.
	  </t>
        </list>
      </t>

      <t>
	-06
	<list style='symbols'>
	  <t>
	   Corrected nits identified by Roman Danyliw.
	  </t>
	</list>
      </t>

      <t>
	-05
	<list style='symbols'>
	  <t>
	   Added text suggested by Jim Schaad describing considerations when using the Key ID confirmation method.
	  </t>
	</list>
      </t>

      <t>
	-04
	<list style='symbols'>
	  <t>
	    Addressed additional WGLC comments by Jim Schaad and Roman Danyliw.
	  </t>
	</list>
      </t>

      <t>
	-03
	<list style='symbols'>
	  <t>
	    Addressed review comments by Jim Schaad, see https://www.ietf.org/mail-archive/web/ace/current/msg02798.html
	  </t>
	  <t>
	    Removed unnecessary sentence in the introduction regarding the use any strings that could be case-sensitive.
	  </t>
	  <t>
	  Clarified the terms Presenter and Recipient.
	  </t>
	  <t>
	  Clarified text about the confirmation claim.
	  </t>
	</list>
      </t>

      <t>
	-02
	<list style='symbols'>
	  <t>
	    Changed "typically" to "often" when describing ways of performing proof of possession.
	  </t>
	  <t>
	    Changed b64 to hex encoding in an example.
	  </t>
	  <t>
	    Changed to using the RFC 8174 boilerplate instead of the RFC 2119 boilerplate.
	  </t>
	</list>
      </t>

      <t>
	-01
	<list style='symbols'>
	  <t>
	    Now uses CBOR diagnostic notation for the examples.
	  </t>
	  <t>
	    Added a table summarizing the "cnf" names, keys, and value types.
	  </t>
	  <t>
	    Addressed some of Jim Schaad's feedback on -00.
	  </t>
	</list>
      </t>

      <t>
	-00
	<list style='symbols'>
	  <t>
	    Created the initial working group draft from draft-jones-ace-cwt-proof-of-possession-01.
	  </t>
	</list>
      </t>

    </section>

  </back>
</rfc>
